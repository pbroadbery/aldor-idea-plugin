name: Java CI

on: [push, pull_request]

env:
  GITHUB_REF: ${{ github.ref }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Check tag
      run: |
        RELEASE=false
        if [[ $GITHUB_REF =~ ^refs/tags/release-.*$ ]];
        then
          RELEASE=true
        fi
        echo "RELEASE is $RELEASE"
        echo "RELEASE=$RELEASE" >> $GITHUB_ENV
    - name: Create mini-script
      run: echo "wrapper {gradleVersion='5.6.4'}" > nada.gradle

    - name: Create Wrapper
      run: gradle -b nada.gradle wrapper

    - name: Check version
      run: ./gradlew --version

    - name: Build
      run: ./gradlew assemble -Daldor.plugin.release=${{ env.RELEASE }}

    - name: Test
      run: ./gradlew check -Daldor.build.skip_ci=true --continue

    - name: Publish Test Results
      if: ${{ always() }}
      uses: mikepenz/action-junit-report@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        report_paths: '**/test-results/test/TEST-*.xml'

    - name: Publish build artifact
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: plugin
        path: build/distributions/*.zip
        retention-days: 1

  upload_release:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'refs/tags/release-')
    needs: [Build]

    steps:
      - name: Set Version
        run: |
          set -x
          RELEASE="${GITHUB_REF/refs\/tags\/release-}"
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: plugin
          path: plugin

      - name: Check ${{ env.RELEASE }}
        run: |
          set -x
          find .
          if [ -f "plugin/aldor-idea-$RELEASE.zip" ]; then OK_RELEASE=OK; fi
          echo "OK_RELEASE=$OK_RELEASE" >> $GITHUB_ENV

      - name: Release ${{ env.RELEASE }}
        if: ${{ env.OK_RELEASE == 'OK' }}
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ env.RELEASE }}
          allowUpdates: true
          prerelease: true
          artifacts: ${{ format('plugin/aldor-idea-{0}.zip', env.RELEASE) }}

      - name: Incorrect Tag supplied
        if: ${{ env.OK_RELEASE != 'OK' }}
        run: |
          echo "Unexpected release $RELEASE"
          ls plugin
          false

